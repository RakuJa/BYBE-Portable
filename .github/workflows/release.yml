name: 'publish'

on:
  push:
    branches:
      - release

env:
  DATABASE_URL: "sqlite://data/database.db"
# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-24.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          check-latest: 'true'

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libappindicator3-dev librsvg2-dev patchelf
          sudo apt install -y \
          libwebkit2gtk-4.1-0=2.44.0-2 \
          libwebkit2gtk-4.1-dev=2.44.0-2 \
          libjavascriptcoregtk-4.1-0=2.44.0-2 \
          libjavascriptcoregtk-4.1-dev=2.44.0-2 \
          gir1.2-javascriptcoregtk-4.1=2.44.0-2 \
          gir1.2-webkit2-4.1=2.44.0-2; 

      - name: Remove Frontend default .env
        uses: JesseTG/rm@v1.0.3
        with:
          path: /BYBE-frontend/.env

      - name: Copy BYBE-Portable .env to Frontend (Windows)
        if: matrix.platform == 'windows-latest'
        run:
          Copy-Item -Path .\.env -Destination .\BYBE-frontend\.env

      - name: Copy BYBE-Portable .env to Frontend (Linux/Macos)
        if: matrix.platform != 'windows-latest'
        run:
          cp .env BYBE-frontend/.env

      - name: install Cargo make
        uses: davidB/rust-cargo-make@v1

      - name: install frontend dependencies
        working-directory: BYBE-frontend
        run: npm install

      - name: build BYBE-Backend downloading necessary data
        run: cargo make prebuild

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          NO_STRIP: true
        with:
          updaterJsonPreferNsis: true
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'v__VERSION__'
          releaseBody: 'For more info on changes look at https://github.com/RakuJa/BYBE/releases and https://github.com/theasel/BYBE-frontend/releases'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}